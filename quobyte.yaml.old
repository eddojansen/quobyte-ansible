---
- hosts: cluster
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Download Quobyte Software for id {{ repo_id }}
      get_url:
        url: https://packages.quobyte.com/repo/3/{{ repo_id }}/install_quobyte
        dest: /root/install_quobyte
        mode: '0755'
    - name: Ensure java is installed on Centos
      yum:
        name: java-1.8.0-openjdk
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - name: Ensure java is installed on Ubuntu
      apt:
        name: openjdk-8-jre-headless
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    - name: Ensure chrony is installed
      package:
        name: chrony
        state: present
    - name: Ensure tuned is installed
      package:
        name: tuned
        state: present
    - name: Ensure ntp is removed
      package:
        name: ntp
        state: absent
    - name: Ensure ntpdate is removed
      package:
        name: ntpdate
        state: absent
    - name: Disable SE Linux
      shell:
        cmd: /usr/sbin/setenforce 0
      ignore_errors: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - name: Ensure SELinux is set to disabled mode
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: SELINUX=disabled
      ignore_errors: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - name: Ensure Apparmor is stopped
      service:
        name: apparmor
        state: stopped
        enabled: no
      ignore_errors: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    - name: Remove apparmor
      package:
        name: apparmor
        state: absent
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      ignore_errors: yes
    - name: Disable swap
      shell:
        cmd: swapoff -a
    - name: Remove swap from fstab
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: '^%swap'
- hosts: bootstrap
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Install Quobyte bootstrap
      shell:
        cmd: /root/install_quobyte bootstrap --repo-id {{ repo_id }} --services registry,data,metadata,api,webconsole --registry-endpoints {{ registry }}
    - name: Install Quobyte client
      shell:
        cmd: /root/install_quobyte add-client --repo-id {{ repo_id }} --registry-endpoints {{ registry }}
- hosts: nodes
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Add node to cluster
      shell:
        cmd: /root/install_quobyte add --repo-id {{ repo_id }} --services registry,data,metadata,api,webconsole --registry-endpoints {{ registry }}
    - name: Install Quobyte client
      shell:
        cmd: /root/install_quobyte add-client --repo-id {{ repo_id }} --registry-endpoints {{ registry }}
- hosts: diskformat
  vars_files:
  - vars/quobyte.yaml
  tasks:
    - name: Create a list of all devices
      command: lsblk -dn -o NAME
      register: list_all
    - set_fact: flist_all="{{ list_all.stdout }}"
    - name: Create a list of non empty devices
      shell:
        cmd: blkid |awk '{print $1}'|sed 's/://'|sed 's/[0-9]\+$//'|uniq
      register: list_non_empty
    - set_fact: flist_non_empty="{{ list_non_empty.stdout }}"
    - set_fact:
        flist_empty: "{{ list_all.stdout_lines | difference (list_non_empty.stdout) }}"
    - name: Create filesystem on empty devices
      shell: mkfs.xfs -L quobyte-dev -isize=1024 /dev/{{ item }}
      with_items:
        - "{{ flist_empty }}"
      register: _create_filesystems
      async: 1200
      poll: 0
    - debug: var=flist_empty
    - name: Wait for creation to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _jobs
      until: _jobs.finished
      delay: 5
      retries: 1000
      with_items: "{{ _create_filesystems.results }}"
#    - name: Set Quobyte label on new devices
#      shell: e2label /dev/{{ item }} quobyte-dev
#      with_items:
#        - "{{ flist_empty }}"
#      register: _create_label
#      async: 1200
#      poll: 0
#    - debug: var=flist_empty
#    - name: Wait for creation to finish
#      async_status:
#        jid: "{{ item.ansible_job_id }}"
#      register: _job2
#      until: _job2.finished
#      delay: 5
#      retries: 1000
#      with_items: "{{ _create_label.results }}"
    - name: Create mount directories
      shell: mkdir /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ flist_empty }}"
      register: _create_dirs
      async: 1200
      poll: 0
    - debug: var=flist_empty
    - name: Wait for creation to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _job3
      until: _job3.finished
      delay: 5
      retries: 1000
      with_items: "{{ _create_dirs.results }}"
    - name: Select the Metadata disk based on mddisksize
      shell:
        cmd: grep {{ flist_empty }} |grep {{ mddisksize }} |awk 'NR==1{print $1}'
      register: list_m
    - set_fact: flist_m="{{ list_m.stdout }}"
    - debug: var=flist_m.stdout_lines
    - pause: seconds=30
    - name: Create Quobyte Metadata devices
      shell: /usr/bin/qmkdev -t M /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ flist_m }}"
    - debug: var=flist_m.stdout_lines
    - set_fact:
        flist_data: "{{ flist_empty | difference (list_m) }}"          
    - debug: var=flist_data
    - name: Create Quobyte Data devices
      shell: /usr/bin/qmkdev -t D /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ flist_data }}"
      register: _create_data_devices
      async: 1200
      poll: 0
    - debug: var=flist_empty
    - name: Wait for creation to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _job4
      until: _job4.finished
      delay: 5
      retries: 1000
      with_items: "{{ _create_data_devices.results }}"
    - pause: seconds=30
- hosts: cluster
  tasks:
    - name: Start and enable Quobyte metadata service
      service:
        name: quobyte-metadata
        state: restarted
        enabled: yes
    - name: Start and enable Quobyte data service
      service:
        name: quobyte-data
        state: restarted
        enabled: yes
    - name: Start and enable Quobyte api service
      service:
        name: quobyte-api
        state: restarted
        enabled: yes
    - name: Start and enable Quobyte webconsole  service
      service:
        name: quobyte-webconsole
        state: restarted
        enabled: yes
    - name: Start quobyte-client
      service:
        name: quobyte-client
        state: restarted
        enabled: yes
- hosts: diskformat,!nodes
  vars_files:
  - vars/quobyte.yaml
  tasks:
    - name: Copy default volume configuration
      copy:
         src: templates/Default-replicated.conf
         dest: /tmp/
    - name: Import volume configuration
      shell:
        cmd: /usr/bin/qmgmt volume config import Default-replicated /tmp/Default-replicated.conf
    - name: Create default volume
      shell:
        cmd: /usr/bin/qmgmt volume create vol0 root root Default-replicated
- hosts: clients
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Download Quobyte Software for id {{ repo_id }}
      get_url:
        url: https://packages.quobyte.com/repo/3/{{ repo_id }}/install_quobyte
        dest: /root/install_quobyte
        mode: '0755'
    - name: Install Quobyte client
      shell:
        cmd: /root/install_quobyte add-client --repo-id {{ repo_id }} --registry-endpoints {{ registry }}
    - name: Ensure java is installed
      package:
        name: java-1.8.0-openjdk
        state: present
    - name: Ensure chrony is installed
      package:
        name: chrony
        state: present
    - name: Ensure tuned is installed
      package:
        name: tuned
        state: present
    - name: Ensure ntp is removed
      package:
        name: ntp
        state: absent
    - name: Ensure ntpdate is removed
      package:
        name: ntpdate
        state: absent
    - name: Disable SE Linux
      shell:
        cmd: /usr/sbin/setenforce 0
      ignore_errors: yes
    - name: Ensure SELinux is set to disabled mode
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: SELINUX=disabled
      ignore_errors: yes
    - name: Configure quobyte client configuration
      blockinfile:
        path: /etc/quobyte/client-service.cfg
        block: |
          registry={{ registry }}
          mount_point={{ mountpoint }}
          options=default_permissions
          disable-xattrs
    - name: Set quobyte-client tuned profile
      shell:
        cmd: /usr/sbin/tuned-adm profile quobyte-client-performance
    - name: Restart quobyte-client
      service:
        name: quobyte-client
        state: restarted
        enabled: yes
