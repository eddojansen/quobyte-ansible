---
- hosts: cluster
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Download Quobyte Software for id {{ repo_id }}
      get_url:
        url: https://packages.quobyte.com/repo/3/{{ repo_id }}/install_quobyte
        dest: /root/install_quobyte
        mode: '0755'
    - name: Install packages Centos
      yum:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - java-1.8.0-openjdk
        - chrony
        - atop
        - htop
        - git
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - name: Install packages Ubuntu
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
        - openjdk-8-jre-headless
        - chrony
        - atop
        - htop
        - git
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    - name: Disable SE Linux
      shell:
        cmd: /usr/sbin/setenforce 0
      register: command_result
      failed_when: "'ERROR' in command_result.stderr"
      ignore_errors: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - name: Ensure SELinux is set to disabled mode
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: SELINUX=disabled
      register: command_result2
      failed_when: "'ERROR' in command_result2.stderr"
      ignore_errors: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - name: Ensure Apparmor is stopped
      service:
        name: apparmor
        state: stopped
        enabled: no
      ignore_errors: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    - name: Remove apparmor
      package:
        name: apparmor
        state: absent
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      ignore_errors: yes
    - name: Remove swaps from fstab
      lineinfile:
        dest: /etc/fstab
        regexp: '^/[\S]+\s+swap\s+swap'
        state: absent
      notify: disable swap
    - name: Disable swap
      shell:
        cmd: swapoff -a
- hosts: diskformat
  vars_files:
  - vars/quobyte.yaml
  tasks:
    - name: Create a list of all devices
      shell:
        cmd: /usr/bin/lsblk -dn -o NAME,TYPE |grep disk |awk '{print $1}'
      register: list_all
    - set_fact: flist_all="{{ list_all.stdout_lines }}"
    - name: Create a list of non empty devices
      shell:
        cmd: blkid |awk '{print $1}'|sed 's/://'|sed 's/[0-9]\+$//'|uniq
      register: list_non_empty
    - set_fact: flist_non_empty="{{ list_non_empty.stdout }}"
    - set_fact:
        flist_empty: "{{ list_all.stdout_lines | difference (list_non_empty.stdout) }}"
    - name: Create filesystem on empty devices
      shell: mkfs.xfs -f -L quobyte-dev -isize=1024 -q /dev/{{ item }}
      with_items:
        - "{{ flist_empty }}"
      register: _create_filesystems
      async: 1200
      poll: 0
    - name: Wait for creation to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _jobs1
      until: _jobs1.finished
      delay: 5
      retries: 1000
      with_items: "{{ _create_filesystems.results }}"
    - name: Create quobyte label list
      shell: lsblk -o name,label |grep quobyte-dev |awk '{print $1}'
      register: _quobyte_labeled
    - set_fact: f_quobyte_labeled="{{ _quobyte_labeled.stdout_lines }}"
    - name: Create mount directories
      shell: mkdir -p /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ f_quobyte_labeled }}"
      register: _create_directories
      async: 1200
      poll: 0
    - name: Wait for creation to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _jobs3
      until: _jobs3.finished
      delay: 5
      retries: 1000
      with_items: "{{ _create_directories.results }}"
    - pause:
        seconds: 5
    - name: Mount devices
      shell: mount /dev/{{ item }} /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ f_quobyte_labeled }}"
      register: _mount_devices
      async: 1200
      poll: 0
    - debug: var=_mount_devices.stdout_lines
    - name: Wait for mount to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _jobs4
      until: _jobs4.finished
      delay: 5
      retries: 1000
      with_items: "{{ _mount_devices.results }}"
    - name: Check number of devices
      shell:
        cmd: lsblk -o name,label |grep quobyte-dev |awk '{print $1}'
      register: _number_devices
    - name: Check number of mounts
      shell:
        cmd: mount -l |grep -c quobyte-dev
      register: _mount_number
    - debug: var=_mount_number.stdout
- hosts: bootstrap
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Install Quobyte bootstrap
      shell:
        cmd: /root/install_quobyte bootstrap --repo-id {{ repo_id }} --services registry,data,metadata,api,webconsole --registry-endpoints {{ registry }}
    - name: Copy Quobyte memory config
      copy:
         src: templates/quobyte
         dest: /etc/default/
    - name: Install Quobyte client
      shell:
        cmd: /root/install_quobyte add-client --repo-id {{ repo_id }} --registry-endpoints {{ registry }} --mount-point {{ mountpoint }}
    - name: Configure quobyte client configuration
      blockinfile:
        path: /etc/quobyte/client-service.cfg
        block: |
          options=default_permissions
          disable-xattrs
- hosts: nodes
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Add node to cluster
      shell:
        cmd: /root/install_quobyte add --repo-id {{ repo_id }} --services registry,data,metadata,api,webconsole --registry-endpoints {{ registry }}
    - name: Copy Quobyte memory config
      copy:
         src: templates/quobyte
         dest: /etc/default/
    - name: Install Quobyte client
      shell:
        cmd: /root/install_quobyte add-client --repo-id {{ repo_id }} --registry-endpoints {{ registry }} --mount-point {{ mountpoint }}
    - name: Configure quobyte client configuration
      blockinfile:
        path: /etc/quobyte/client-service.cfg
        block: |
          options=default_permissions
          disable-xattrs
- hosts: diskformat
  vars_files:
  - vars/quobyte.yaml
  tasks:
    - name: Select the Metadata disk based on mddisksize
      shell:
        cmd: lsblk -o name,label,size |grep quobyte-dev |grep {{ mddisksize }} |awk 'NR==1{print $1}'
      register: list_m
    - set_fact: flist_m="{{ list_m.stdout_lines }}"
    - debug: var=list_m.stdout_lines
    - name: Create metadata disk
      shell: qmkdev -t M /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ flist_m }}"
    - set_fact:
        flist_d: "{{ flist_empty | difference (flist_m) }}"
    - debug: var=flist_d
    - name: Create Quobyte Data devices
      shell: qmkdev -t D /var/lib/quobyte/mnt/inspector-{{ item }}
      with_items:
        - "{{ flist_d }}"
      register: _create_data_devices
      async: 1200
      poll: 0
    - debug: var=flist_d
    - name: Wait for creation to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _jobs3
      until: _jobs3.finished
      delay: 5
      retries: 1000
      with_items: "{{ _create_data_devices.results }}"
    - pause: seconds=5
- hosts: cluster
  tasks:
    - name: Truncate metadata log
      shell: truncate -s 0 /var/log/quobyte/metadata.log
    - name: Start and enable Quobyte metadata service
      service:
        name: quobyte-metadata
        state: restarted
        enabled: yes
    - name: Start and enable Quobyte data service
      service:
        name: quobyte-data
        state: restarted
        enabled: yes
    - name: Start and enable Quobyte api service
      service:
        name: quobyte-api
        state: restarted
        enabled: yes
    - name: Start and enable Quobyte webconsole  service
      service:
        name: quobyte-webconsole
        state: restarted
        enabled: yes
    - name: Start quobyte-client
      service:
        name: quobyte-client
        state: restarted
        enabled: yes
    - name: Wait until metadata service is ready
      wait_for:
        path: /var/log/quobyte/metadata.log
        search_regex: "volume initialization complete"
- hosts: diskformat,!nodes
  vars_files:
  - vars/quobyte.yaml
  tasks:
    - name: Copy default volume configuration
      copy:
         src: templates/Default-replicated.conf
         dest: /tmp/
    - name: Import volume configuration
      shell:
        cmd: /usr/bin/qmgmt volume config import Default-replicated /tmp/Default-replicated.conf
    - name: Create default volume
      shell:
        cmd: /usr/bin/qmgmt volume create vol0 root root Default-replicated
- hosts: clients
  vars_files:
    - vars/quobyte.yaml
  tasks:
    - name: Download Quobyte Software for id {{ repo_id }}
      get_url:
        url: https://packages.quobyte.com/repo/3/{{ repo_id }}/install_quobyte
        dest: /root/install_quobyte
        mode: '0755'
    - name: Install Quobyte client
      shell:
        cmd: /root/install_quobyte add-client --repo-id {{ repo_id }} --registry-endpoints {{ registry }} --mount-point {{ mountpoint }}
    - name: Ensure java is installed
      package:
        name: java-1.8.0-openjdk
        state: present
    - name: Ensure chrony is installed
      package:
        name: chrony
        state: present
    - name: Ensure tuned is installed
      package:
        name: tuned
        state: present
    - name: Ensure ntp is removed
      package:
        name: ntp
        state: absent
    - name: Ensure ntpdate is removed
      package:
        name: ntpdate
        state: absent
    - name: Disable SE Linux
      shell:
        cmd: /usr/sbin/setenforce 0
      ignore_errors: yes
    - name: Ensure SELinux is set to disabled mode
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: SELINUX=disabled
      ignore_errors: yes
    - name: Configure quobyte client configuration
      blockinfile:
        path: /etc/quobyte/client-service.cfg
        block: |
          options=default_permissions
          disable-xattrs
    - name: Set quobyte-client tuned profile
      shell:
        cmd: /usr/sbin/tuned-adm profile quobyte-client-performance
    - name: Restart quobyte-client
      service:
        name: quobyte-client
        state: restarted
        enabled: yes
